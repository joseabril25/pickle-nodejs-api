version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fonica_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fonica_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fonica_api
    env_file:
      - .env
    environment:
      DB_HOST: postgres  # Override to use container name
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./src:/app/src
      - ./nodemon.json:/app/nodemon.json
      - ./tsconfig.json:/app/tsconfig.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fonica_network
    command: npm run dev

volumes:
  postgres_data:

networks:
  fonica_network:
    driver: bridge